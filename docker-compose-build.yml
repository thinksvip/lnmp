version: '3'
# 定义四个服务nginx,php,mysql,redis
services:
  nginx:
    # 依赖php服务，意味着在启动nginx之前先启动php
    depends_on:
      - php
    # nginx镜像的路径
    build:
      context: ./nginx
      dockerfile: Dockerfile
      args:
        NGINX_VERSION: ${NGINX_VERSION}
    # 这样使nginx容器把网站文件和目录存放到主机目录中，持久化和方便管理
    volumes:
      - "${VOLUMES_DRIVER}:/sock"
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${NGINX_HOST_CONF_PATH}conf.d/:/etc/nginx/conf.d/:ro,cached
      - ${NGINX_HOST_CONF_PATH}nginx.conf:/etc/nginx/nginx.conf:ro,cached
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx/:rw,cached
    # 映射80和443端口
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    networks:
      frontend:
    # nginx意外退出时自动重启
    restart: always
    # 容器名称
    container_name: nginx

  #PHP  
  php:
    build:
      context: ./php/php
      dockerfile: Dockerfile
      args:
        PHP_FPM_VERSION: ${PHP_FPM_VERSION}
    volumes:
      - "${VOLUMES_DRIVER}:/sock"
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${PHP_FRM_HOST_CONF_PATH}php.ini:/usr/local/etc/php/php.ini:ro,cached
      - ${PHP_FRM_HOST_CONF_PATH}php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf:ro,cached
      - ${PHP_FRM_HOST_CONF_PATH}zz-docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf:ro,cached
      - ${PHP_FRM_HOST_LOG_PATH}:/var/log/php-fpm/:rw,cached
    ports:
      - "${PHP_FRM_PORT}:9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      frontend:
      backend: 
    restart: always
    cap_add:
      - SYS_PTRACE
    container_name: php


  #PHP  
  php8:
    build:
      context: ./php/php8
      dockerfile: Dockerfile
      args:
        PHP_FPM_VERSION: ${PHP8_FPM_VERSION}
    volumes:
      - "${VOLUMES_DRIVER}:/sock"
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${PHP8_FRM_HOST_CONF_PATH}php.ini:/usr/local/etc/php/php.ini:ro,cached
      - ${PHP8_FRM_HOST_CONF_PATH}php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf:ro,cached
      - ${PHP8_FRM_HOST_CONF_PATH}zz-docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf:ro,cached
      - ${PHP8_FRM_HOST_LOG_PATH}:/var/log/php-fpm/:rw,cached
    ports:
      - "${PHP_FRM_PORT}:9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      frontend:
      backend: 
    restart: always
    cap_add:
      - SYS_PTRACE
    container_name: php8

  # Queue
  queue:
    depends_on:
      - php
    build:
      context: ./php/php-queue
      dockerfile: Dockerfile
      args:
        PHP_QUEUE_VERSION: ${PHP_QUEUE_VERSION}
    volumes:
      - "${VOLUMES_DRIVER}:/sock"
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      - ${PHP_FRM_HOST_CONF_PATH}php.ini:/usr/local/etc/php/php.ini:ro,cached
      - ${PHP_FRM_HOST_CONF_PATH}php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro,cached
    container_name: queue
    command: php ${APP_CODE_PATH}/artisan queue:work --sleep=3 --tries=3
    restart: always
    networks:
      backend: 

  # MySQL
  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile
      args:
        MYSQL_VERSION: ${MYSQL_VERSION}
    volumes:
      - ${MYSQL_HOST_CONF_PATH}my${MYSQL_VERSION}.cnf:/etc/mysql/conf.d/mysql.cnf:ro,cached
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql/:rw,cached
      - ${MYSQL_HOST_LOG_PATH}:/var/log/mysql/:rw,cached
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TIME_ZONE}
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      backend:
    restart: always
    container_name: mysql

  # REDIS
  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
      args:
        REDIS_VERSION: ${REDIS_VERSION}
    volumes:
      - ${DATA_PATH_HOST}/redis:/data/:rw,cached
      - ${REDIS_HOST_CONF_PATH}:/usr/local/redis/redis.conf:ro,cached
      - ${REDIS_HOST_LOG_PATH}:/usr/local/redis/redis.log:rw,cached
    environment:
      - TZ=${TIME_ZONE}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      backend:        
    restart: always
    container_name: redis

  # NODE
  node:
    depends_on:
      - php
    build:
      context: ./node
      dockerfile: Dockerfile
      args:
        NODE_VERSION: ${NODE_VERSION}
    volumes:
      - ${NODE_PATH_HOST}:/app/laravel-echo-server.json:ro
    ports:
      - "${LARAVEL_ECHO_SERVER_PORT}:6001"
    links:
      - redis
      - nginx
    networks:
      frontend:
      backend: 
    restart: always
    container_name: node

#网络
networks:
  frontend:
  backend:

#sock容器
volumes:
  local:

